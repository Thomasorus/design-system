{
  "version": 3,
  "sources": ["../../src/js/index.js"],
  "sourcesContent": ["// Check for input required and adds text in the label\nconst allRequired = document.querySelectorAll(\"input[required]\")\nallRequired.forEach(el => {\n    const id = el.getAttribute('id');\n    const label = document.querySelector(`label[for=\"${id}\"`)\n    const text = `<span class=\"required\">&nbsp;(Required)</span>`\n    label.insertAdjacentHTML(\"beforeend\", text)\n});\n\n// Check for aria invalid and add error message\nconst allAriaInvalid = document.querySelectorAll(`input[aria-invalid=\"true\"]`)\nallAriaInvalid.forEach(el => {\n    const id = el.getAttribute('id')\n    const errorId = id + \"-error\"\n    const infoID = id + \"-info\"\n    const errorMessage = document.querySelector(`div[id=\"${errorId}\"]`)\n    errorMessage.removeAttribute(\"hidden\")\n    const existingIds = el.getAttribute('aria-describedby')\n    el.setAttribute(\"aria-describedby\", existingIds + \" \" + errorId)\n\n});\n\n// Checks for collapse component\nconst triggers = document.querySelectorAll('.collapse [data-trigger=\"true\"]');\ntriggers.forEach(el => {\n    const tagName = el.tagName\n    const dataAttributes = el.dataset\n    let attrString = \"\"\n    Object.keys(dataAttributes).map(key => {\n        if (key !== \"trigger\") {\n            attrString += ` data-${key} `\n        }\n    });\n    el.innerHTML = `\n    <button aria-expanded=\"false\" ${attrString}>${el.textContent}</button>`;\n    const getContent = (elem) => {\n        let elems = [];\n        //Put siblings inside an array if they don't are a data trigger\n        while (elem.nextElementSibling && elem.nextElementSibling.tagName !== tagName) {\n            elems.push(elem.nextElementSibling);\n            elem = elem.nextElementSibling;\n        }\n        // Delete the old versions of the content nodes\n        elems.forEach((node) => {\n            node.parentNode.removeChild(node);\n        })\n        return elems;\n    }\n    let contents = getContent(el);\n\n    let wrapper = document.createElement('div');\n    wrapper.hidden = true;\n    wrapper.setAttribute(\"class\", \"flow accessibility-menu\")\n\n    // Add each element of `contents` to `wrapper`\n    contents.forEach(node => {\n        wrapper.appendChild(node);\n    })\n\n    // Add the wrapped content back into the DOM after the trigger\n    el.parentNode.insertBefore(wrapper, el.nextElementSibling);\n\n    // Assign the button\n    let btn = el.querySelector('button');\n\n    btn.onclick = () => {\n        // Cast the state as a boolean\n        let expanded = btn.getAttribute('aria-expanded') === 'true';\n        // Switch the state\n        btn.setAttribute('aria-expanded', !expanded);\n        // Switch the content's visibility\n        wrapper.hidden = expanded;\n    }\n})\n\n\nfunction changeFont(el) {\n    const font = el.dataset.font;\n    let html = document.querySelector(\"html\")\n    if (font === \"inter\") {\n        html.setAttribute('font-style', \"\")\n    } else {\n        html.setAttribute('font-style', font)\n    }\n}\n\nfunction changeFontSize(el) {\n    const action = el.dataset.resize;\n    console.log(action)\n    let root = document.querySelector(\"html\"),\n        style = window.getComputedStyle(root, null).getPropertyValue('font-size'),\n        fontSize = parseFloat(style);\n    if (action === \"+\") {\n        root.style.fontSize = (fontSize * 1.25) + \"px\";\n    } else {\n        root.style.fontSize = (fontSize / 1.25) + \"px\";\n    }\n}\n\nfunction setThemeFromLocalStorage() {\n    const value = localStorage.getItem(\"theme\");\n    if (value == \"light\") {\n        document.documentElement.setAttribute('theme', 'light');\n        localStorage.setItem(\"theme\", \"light\");\n    }\n    if (value == \"dark\") {\n        document.documentElement.setAttribute('theme', 'dark');\n        localStorage.setItem(\"theme\", \"dark\");\n    }\n\n    const size = localStorage.getItem(\"fontsize\");\n    let root = document.querySelector(\"html\"),\n        style = window.getComputedStyle(root, null).getPropertyValue('font-size'),\n        fontSize = parseFloat(style);\n    root.style.fontSize = size;\n\n    const font = localStorage.getItem(\"fontstyle\");\n    const html = document.querySelector('html');\n    html.setAttribute('font-style', font);\n}\n\nfunction changeColors(el) {\n    const html = document.querySelector(\"html\")\n    const currentTheme = html.getAttribute('theme')\n    const newTheme = el.getAttribute(\"id\")\n    html.setAttribute(\"theme\", newTheme)\n    localStorage.setItem(\"theme\", newTheme);\n}\n\n(function () {\n    setThemeFromLocalStorage()\n})();"],
  "mappings": ";;AACA,MAAM,cAAc,SAAS,iBAAiB;AAC9C,cAAY,QAAQ,QAAM;AACtB,UAAM,KAAK,GAAG,aAAa;AAC3B,UAAM,QAAQ,SAAS,cAAc,cAAc;AACnD,UAAM,OAAO;AACb,UAAM,mBAAmB,aAAa;AAAA;AAI1C,MAAM,iBAAiB,SAAS,iBAAiB;AACjD,iBAAe,QAAQ,QAAM;AACzB,UAAM,KAAK,GAAG,aAAa;AAC3B,UAAM,UAAU,KAAK;AACrB,UAAM,SAAS,KAAK;AACpB,UAAM,eAAe,SAAS,cAAc,WAAW;AACvD,iBAAa,gBAAgB;AAC7B,UAAM,cAAc,GAAG,aAAa;AACpC,OAAG,aAAa,oBAAoB,cAAc,MAAM;AAAA;AAK5D,MAAM,WAAW,SAAS,iBAAiB;AAC3C,WAAS,QAAQ,QAAM;AACnB,UAAM,UAAU,GAAG;AACnB,UAAM,iBAAiB,GAAG;AAC1B,QAAI,aAAa;AACjB,WAAO,KAAK,gBAAgB,IAAI,SAAO;AACnC,UAAI,QAAQ,WAAW;AACnB,sBAAc,SAAS;AAAA;AAAA;AAG/B,OAAG,YAAY;AAAA,oCACiB,cAAc,GAAG;AACjD,UAAM,aAAa,CAAC,SAAS;AACzB,UAAI,QAAQ;AAEZ,aAAO,KAAK,sBAAsB,KAAK,mBAAmB,YAAY,SAAS;AAC3E,cAAM,KAAK,KAAK;AAChB,eAAO,KAAK;AAAA;AAGhB,YAAM,QAAQ,CAAC,SAAS;AACpB,aAAK,WAAW,YAAY;AAAA;AAEhC,aAAO;AAAA;AAEX,QAAI,WAAW,WAAW;AAE1B,QAAI,UAAU,SAAS,cAAc;AACrC,YAAQ,SAAS;AACjB,YAAQ,aAAa,SAAS;AAG9B,aAAS,QAAQ,UAAQ;AACrB,cAAQ,YAAY;AAAA;AAIxB,OAAG,WAAW,aAAa,SAAS,GAAG;AAGvC,QAAI,MAAM,GAAG,cAAc;AAE3B,QAAI,UAAU,MAAM;AAEhB,UAAI,WAAW,IAAI,aAAa,qBAAqB;AAErD,UAAI,aAAa,iBAAiB,CAAC;AAEnC,cAAQ,SAAS;AAAA;AAAA;AA4BzB,sCAAoC;AAChC,UAAM,QAAQ,aAAa,QAAQ;AACnC,QAAI,SAAS,SAAS;AAClB,eAAS,gBAAgB,aAAa,SAAS;AAC/C,mBAAa,QAAQ,SAAS;AAAA;AAElC,QAAI,SAAS,QAAQ;AACjB,eAAS,gBAAgB,aAAa,SAAS;AAC/C,mBAAa,QAAQ,SAAS;AAAA;AAGlC,UAAM,OAAO,aAAa,QAAQ;AAClC,QAAI,OAAO,SAAS,cAAc,SAC9B,QAAQ,OAAO,iBAAiB,MAAM,MAAM,iBAAiB,cAC7D,WAAW,WAAW;AAC1B,SAAK,MAAM,WAAW;AAEtB,UAAM,OAAO,aAAa,QAAQ;AAClC,UAAM,OAAO,SAAS,cAAc;AACpC,SAAK,aAAa,cAAc;AAAA;AAWpC,EAAC,YAAY;AACT;AAAA;",
  "names": []
}
